# -*- coding: utf-8 -*-
"""Heart Disease Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dd6srsC_c8UoEVJuuH2tgQuDBbOT9oed
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""data collection and processing

"""

heart_data=pd.read_csv("/content/heart.csv")

heart_data.head()

heart_data.tail()

heart_data.shape

#getting some info about dataset
heart_data.info()

#checking null values
heart_data.isnull().sum()

#statistical measure of the data
heart_data.describe()

#checking the distribution of targetdata
heart_data['target'].value_counts()



"""1-represent Defective heart
0-represent healthy heart
"""

#splitting feature and target
x=heart_data.drop(columns='target',axis=1)
y=heart_data['target']

print(x)

print(y)



"""spliting data into training data and test data

"""

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x.shape,x_train.shape,x_test.shape)



"""Model training using Logistic regression"""

model=LogisticRegression()
#training logistic regression model with training data
model.fit(x_train,y_train)

#model evaluation accuracy score

#accuracy on training data
x_train_pred=model.predict(x_train)
training_data_accuracy=accuracy_score(x_train_pred,y_train)

print("Accuracy on training data:",training_data_accuracy)



#accuracy on test data
x_test_pred=model.predict(x_test)
test_data_accuracy=accuracy_score(x_test_pred,y_test)



print("Accuracy on test data:",test_data_accuracy)

#build predictive system
input_data=(71,0,0,112,149,0,1,125,0,1.6,1,0,2)
#change input data to a numpy array
input_data_as_numpy_array=np.asarray(input_data)
#reshape the numpy array as we are predicting only one instance
input_data_reshape=input_data_as_numpy_array.reshape(1,-1)
prediction=model.predict(input_data_reshape)
print(prediction)
if(prediction[0]==0):
  print("the person does not have heart disease")
else:
    print("the pearson have heart disease")

